{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/demo/demo.component.ts","./src/app/demo/demo.component.html","./src/app/documentation/documentation.component.ts","./src/app/documentation/documentation.component.html","./src/app/shared/custom-modal/custom-modal.component.ts","./src/app/shared/custom-modal/custom-modal.component.html","./src/app/shared/custom-validators/required-validator.ts","./src/app/shared/st-custom-renderer/st-custom-renderer.component.ts","./src/app/shared/st-custom-renderer/st-custom-renderer.component.html","./src/app/shared/st-dropdown-editor/st-dropdown-editor.component.ts","./src/app/shared/st-dropdown-editor/st-dropdown-editor.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\r\nimport { Column, Change, ContextMenuModel, SpreadTableComponent, UndoRedoService, Cell, Row } from 'spread-table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RequiredValidator } from './shared/custom-validators/required-validator';\r\nimport { StDropdownEditorComponent } from './shared/st-dropdown-editor/st-dropdown-editor.component';\r\nimport { StCustomRendererComponent } from './shared/st-custom-renderer/st-custom-renderer.component';\r\nimport { CustomModalComponent } from './shared/custom-modal/custom-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  pages = {\r\n    demo: 'demo',\r\n    docs: 'docs',\r\n  }\r\n\r\n  selectedPage = this.pages.demo;\r\n\r\n  setPage(page: string) {\r\n    this.selectedPage = page;\r\n  }\r\n}\r\n\r\n","<div>\r\n  <button class=\"menu-button\"\r\n          [ngClass]=\"{'selected-page': this.selectedPage === 'demo'}\"\r\n          (click)=\"setPage(pages.demo)\">Demo</button>\r\n  <button class=\"menu-button\"\r\n          [ngClass]=\"{'selected-page': this.selectedPage === 'docs'}\"\r\n          (click)=\"setPage(pages.docs)\">Documentation</button>\r\n</div>\r\n<div class=\"page-wrapper\">\r\n  <ng-container *ngIf=\"selectedPage===pages.demo\">\r\n    <app-demo></app-demo>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"selectedPage === pages.docs\">\r\n    <app-documentation></app-documentation>\r\n  </ng-container>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { SpreadTableModule } from 'spread-table';\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { StDropdownEditorComponent } from './shared/st-dropdown-editor/st-dropdown-editor.component';\r\nimport { CustomModalComponent } from './shared/custom-modal/custom-modal.component';\r\nimport { StCustomRendererComponent } from './shared/st-custom-renderer/st-custom-renderer.component';\r\nimport { DemoComponent } from './demo/demo.component';\r\nimport { DocumentationComponent } from './documentation/documentation.component';\r\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CustomModalComponent,\r\n    StDropdownEditorComponent,\r\n    StCustomRendererComponent,\r\n    DemoComponent,\r\n    DocumentationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    SpreadTableModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    HighlightModule\r\n  ],\r\n  providers: [{\r\n    provide: HIGHLIGHT_OPTIONS,\r\n    useValue: {\r\n      fullLibraryLoader: () => import('highlight.js'),\r\n      themePath: '/ng-spread-table/assets/androidstudio.css' // Optional, and useful if you want to change the theme dynamically\r\n    }\r\n  }],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\r\nimport { Column, Change, ContextMenuModel, SpreadTableComponent, UndoRedoService, Cell, Row } from 'spread-table';\r\nimport { CustomModalComponent } from '../shared/custom-modal/custom-modal.component';\r\nimport { RequiredValidator } from '../shared/custom-validators/required-validator';\r\nimport { StCustomRendererComponent } from '../shared/st-custom-renderer/st-custom-renderer.component';\r\nimport { StDropdownEditorComponent } from '../shared/st-dropdown-editor/st-dropdown-editor.component';\r\n\r\n@Component({\r\n  selector: 'app-demo',\r\n  templateUrl: './demo.component.html',\r\n  styleUrls: ['./demo.component.scss']\r\n})\r\nexport class DemoComponent {\r\n\r\n  frameworkComponents = {\r\n    dropdownEditor: StDropdownEditorComponent,\r\n    customRenderer: StCustomRendererComponent\r\n  };\r\n\r\n  columns: Column[] = [\r\n    new Column({ displayName: 'Id', name: 'id', editable: false, resizable: false }),\r\n    new Column({ displayName: 'Album Id', name: 'albumId', editorComponent: this.frameworkComponents.dropdownEditor, editorParams: { items: [1, 2, 3, 4] } }),\r\n    new Column({ displayName: 'Title', name: 'title', minWidth: 400, validators: [RequiredValidator.required(), RequiredValidator.requiredString()] }),\r\n    new Column({ displayName: 'Url', name: 'url', minWidth: 300, rendererComponent: this.frameworkComponents.customRenderer }),\r\n    new Column({ displayName: 'Thumbnail Url', name: 'thumbnailUrl', minWidth: 300, rendererComponent: this.frameworkComponents.customRenderer })];\r\n\r\n  data: any;\r\n  event!: string;\r\n  result: any;\r\n\r\n  gridInstance: SpreadTableComponent = new SpreadTableComponent(new UndoRedoService());\r\n\r\n  @ViewChild('spreadTable') set grid(gridInstance: SpreadTableComponent) {\r\n    this.gridInstance = gridInstance;\r\n  }\r\n\r\n  extraContextMenuItems: ContextMenuModel[] =\r\n    [{\r\n      menuText: 'separator'\r\n    }, {\r\n      faIconName: 'fas fa-american-sign-language-interpreting',\r\n      menuText: 'Test 1',\r\n      menuEvent: 'test1Event',\r\n      disabled: false,\r\n    },\r\n    {\r\n      faIconName: 'fas fa-archway',\r\n      menuText: 'Test 2',\r\n      menuEvent: 'test2Event',\r\n      disabled: true\r\n    },];\r\n\r\n  extraColumnMenuItems: ContextMenuModel[] =\r\n    [{\r\n      menuText: 'separator'\r\n    }, {\r\n      faIconName: 'fas fa-edit',\r\n      menuText: 'Rename column',\r\n      menuEvent: 'renameColumnEvent',\r\n      disabled: false,\r\n    }, {\r\n      faIconName: 'fas fa-plus-square',\r\n      menuText: 'Add column',\r\n      menuEvent: 'addColumnEvent',\r\n      disabled: false,\r\n    },\r\n    {\r\n      faIconName: 'fas fa-trash',\r\n      menuText: 'Remove column',\r\n      menuEvent: 'removeColumnEvent',\r\n      disabled: false\r\n    },];\r\n\r\n  constructor(private httpClient: HttpClient, public dialog: MatDialog) {\r\n    this.getData();\r\n  }\r\n\r\n  private async getData() {\r\n    const products: any = await lastValueFrom(this.httpClient.get('https://jsonplaceholder.typicode.com/photos'));\r\n    console.log(products);\r\n    this.data = products;\r\n  }\r\n\r\n  getSpreadTable() {\r\n    console.log(this.gridInstance as SpreadTableComponent);\r\n    this.gridInstance.headerBgColor = this.randomColor().backgroundColor;\r\n    this.gridInstance.headerColor = this.randomColor().color;\r\n    this.result = Object.keys(this.gridInstance).join('<br>');\r\n    this.event = 'Grid properties';\r\n  }\r\n\r\n  getSelectedCells() {\r\n    console.log(this.gridInstance.getSelectedCells());\r\n    this.result = JSON.stringify(this.gridInstance.getSelectedCells(), null, 2);\r\n    this.event = 'Selected Cells';\r\n  }\r\n\r\n  getGridData() {\r\n    console.log(this.gridInstance.getData());\r\n    this.result = JSON.stringify(this.gridInstance.getData(), null, 2);\r\n    this.event = 'Grid instance';\r\n  }\r\n\r\n  onCellValueChange(event: Change[]) {\r\n    console.log('changes:', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Cell value change';\r\n  }\r\n\r\n  onContextMenuEvent(event: ContextMenuModel) {\r\n    console.log('contextMenuEvent', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Menu event';\r\n  }\r\n\r\n  async onColumnMenuEvent(event: ContextMenuModel) {\r\n    console.log('contextMenuEvent', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Menu event';\r\n    if (event.menuEvent === 'addColumnEvent') {\r\n      const result = await this.openDialog(`Add new column`, 'Column name', 'Add', 'Cancel');\r\n\r\n      if (!result) return;\r\n\r\n      // define the new column\r\n      const newColumn = new Column({ name: result, displayName: result, editable: true, resizable: true, minWidth: 200, });\r\n      // add the new column to the columns array\r\n      this.columns.splice(this.columns.indexOf(event.column!) + 1, 0, newColumn);\r\n      this.columns = [...this.columns];\r\n\r\n      // add cells in the data array for the new column\r\n      this.gridInstance.data.forEach((row: Row) => {\r\n        row.cells.splice(this.columns.indexOf(newColumn), 0, new Cell({ columnName: newColumn.name, value: '', originalValue: '', rowIndex: row.rowIndex }));\r\n      });\r\n      this.gridInstance.setColumnsWidth();\r\n    }\r\n\r\n    if (event.menuEvent === 'removeColumnEvent') {\r\n      this.gridInstance.data.forEach((row: Row) => {\r\n        let cells = row.cells.filter((cell: Cell) => cell.columnName !== event.column!.name);\r\n        row.cells = [...cells];\r\n      });\r\n\r\n      this.columns.splice(this.columns.indexOf(event.column!), 1);\r\n      this.columns = [...this.columns];\r\n\r\n      // if there were changes in the undo stack on this column remove them\r\n      this.gridInstance.undoRedoService._changesForUndo.forEach((changes: Change[]) => {\r\n        changes.forEach((change: Change) => {\r\n          if (change.coordinates.columnName === event.column!.name)\r\n            changes.splice(changes.indexOf(change), 1);\r\n        });\r\n      });\r\n\r\n      this.gridInstance.setColumnsWidth();\r\n    }\r\n\r\n    if (event.menuEvent === 'renameColumnEvent') {\r\n      const result = await this.openDialog(`Rename - ${event.column!.displayName}`, 'Column name', 'Rename', 'Cancel', event.column!.displayName);\r\n\r\n      if (!result) return;\r\n\r\n      // change cells column name value to the renamed column name\r\n      this.gridInstance.data.forEach((row: Row) => {\r\n        let cell = row.cells.find((cell: Cell) => cell.columnName === event.column!.name);\r\n        cell!.columnName = result;\r\n      });\r\n\r\n      // if there were changes in the undo stack on this column set them to the new column name\r\n      this.gridInstance.undoRedoService._changesForUndo.forEach((changes: Change[]) => {\r\n        changes.forEach((change: Change) => {\r\n          if (change.coordinates.columnName === event.column!.name)\r\n            change.coordinates.columnName = result;\r\n        });\r\n      });\r\n\r\n      // rename column in the columns array\r\n      const columnIndex = this.columns.indexOf(event.column!);\r\n      this.columns[columnIndex].displayName = result;\r\n      this.columns[columnIndex].name = result;\r\n      this.columns = [...this.columns];\r\n\r\n      this.gridInstance.setColumnsWidth();\r\n    }\r\n  }\r\n\r\n  async openDialog(headerText: string, bodyText: string, okButtonText: string, cancelButtonText: string, value: string = '') {\r\n    const dialogRef = this.dialog.open(CustomModalComponent);\r\n\r\n    dialogRef.componentInstance.headerText = headerText;\r\n    dialogRef.componentInstance.bodyText = bodyText;\r\n    dialogRef.componentInstance.okButtonText = okButtonText;\r\n    dialogRef.componentInstance.cancelButtonText = cancelButtonText;\r\n    dialogRef.componentInstance.value = value;\r\n\r\n    const result = await firstValueFrom(dialogRef.afterClosed());\r\n\r\n    return result;\r\n  }\r\n\r\n  private randomColor = () => {\r\n    let color = Math.floor(Math.random() * 16777215).toString(16);\r\n\r\n    /* sometimes the returned value does not have\r\n     * the 6 digits needed, so we do it again until\r\n     * it does\r\n     */\r\n\r\n    while (color.length < 6) {\r\n      color = Math.floor(Math.random() * 16777215).toString(16);\r\n    }\r\n\r\n    let red = parseInt(color.substring(0, 2), 16);\r\n    let green = parseInt(color.substring(2, 4), 16);\r\n    let blue = parseInt(color.substring(4, 6), 16);\r\n    let brightness = red * 0.299 + green * 0.587 + blue * 0.114;\r\n\r\n    /* if (red*0.299 + green*0.587 + blue*0.114) > 180\r\n     * use #000000 else use #ffffff\r\n     */\r\n\r\n    if (brightness > 180) {\r\n      return {\r\n        backgroundColor: '#' + color,\r\n        color: '#000000',\r\n      };\r\n    } else\r\n      return {\r\n        backgroundColor: '#' + color,\r\n        color: '#ffffff',\r\n      };\r\n  };\r\n\r\n}\r\n","<div>This is <b>Spread Table</b>, a customizable Angular table that tends to look and feel like a basic spreadsheet.\r\n</div>\r\n<br>\r\n<button class=\"m-2 btn btn-danger\"\r\n        (click)=\"getSpreadTable()\">Get spread table</button>\r\n<button class=\"m-2 btn btn-success\"\r\n        (click)=\"getSelectedCells()\">Selected Cells</button>\r\n<button class=\"m-2 btn btn-primary\"\r\n        (click)=\"getGridData()\">Get Data</button>\r\n<a style=\"width: 124px;\r\n    height: 32px;\r\n    background: url(https://raw.githubusercontent.com/neb1neuron/ng-spread-table/master/buy-me-a-beer.svg);\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    display: inline-block;\"\r\n   href=\"https://www.paypal.com/paypalme/CFeder/5\"\r\n   class=\"btn\"></a>\r\n\r\n<div class=\"p-3 w-100\"\r\n     style=\"height: 700px;\">\r\n  <spread-table *ngIf=\"data\"\r\n                #spreadTable\r\n                [columns]=\"columns\"\r\n                [minColumnWidth]=\"100\"\r\n                [rowHeight]=\"36\"\r\n                [indexWidth]=\"60\"\r\n                [rawData]=\"data\"\r\n                [undoRedoStackSize]=\"20\"\r\n                [extraContextMenuItems]=\"extraContextMenuItems\"\r\n                [extraColumnMenuItems]=\"extraColumnMenuItems\"\r\n                (cellValueChange)=\"onCellValueChange($event)\"\r\n                (contextMenuEvent)=\"onContextMenuEvent($event)\"\r\n                (columnMenuEvent)=\"onColumnMenuEvent($event)\">\r\n\r\n  </spread-table>\r\n</div>\r\n<h3 class=\"result\"\r\n    [innerHtml]=\"event\"></h3>\r\n<pre class=\"result\"\r\n     [innerHtml]=\"result\"></pre>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-documentation',\r\n  templateUrl: './documentation.component.html',\r\n  styleUrls: ['./documentation.component.scss']\r\n})\r\nexport class DocumentationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  appModuleSetup =\r\n    `import { SpreadTableModule } from 'spread-table';\r\n@NgModule({\r\n  imports: [\r\n    // Other module imports\r\n    ...\r\n    // spread-table modules\r\n    SpreadTableModule,\r\n  ],\r\n})\r\nexport class AppModule { }\r\n`;\r\n\r\n  appComponentTsSetup =\r\n    `import { HttpClient } from \"@angular/common/http\";\r\nimport { Component } from \"@angular/core\";\r\nimport { Column } from \"spread-table\";\r\n\r\n@Component({\r\nselector: \"app-root\",\r\ntemplateUrl: \"./app.component.html\",\r\nstyleUrls: [\"./app.component.scss\"],\r\n})\r\nexport class AppComponent {\r\n  columns: Column[] = [\r\n    new Column({ displayName: 'Id', name: 'id', editable: false, resizable: false }),\r\n    new Column({ displayName: 'Album Id', name: 'albumId'),\r\n    new Column({ displayName: 'Title', name: 'title', minWidth: 400, validators: [RequiredValidator.required(), RequiredValidator.requiredString()] }),\r\n    new Column({ displayName: 'Url', name: 'url', minWidth: 300}),\r\n    new Column({ displayName: 'Thumbnail Url', name: 'thumbnailUrl', minWidth: 300 })\r\n  ];\r\n\r\n  data: any;\r\n\r\n  gridInstance: SpreadTableComponent = new SpreadTableComponent(new UndoRedoService());\r\n\r\n  @ViewChild('spreadTable') set grid(gridInstance: SpreadTableComponent) {\r\n    this.gridInstance = gridInstance;\r\n  }\r\n\r\n  // this is how you would add custom context menu items\r\n  extraContextMenuItems: ContextMenuModel[] =\r\n    [{\r\n      menuText: 'separator'\r\n    }, {\r\n      faIconName: 'fas fa-american-sign-language-interpreting',\r\n      menuText: 'Test 1',\r\n      menuEvent: 'test1Event',\r\n      disabled: false,\r\n    },\r\n    {\r\n      faIconName: 'fas fa-archway',\r\n      menuText: 'Test 2',\r\n      menuEvent: 'test2Event',\r\n      disabled: true\r\n    },];\r\n\r\n  // this is how you would add custom column menu items\r\n  extraColumnMenuItems: ContextMenuModel[] =\r\n    [{\r\n      menuText: 'separator'\r\n    }, {\r\n      faIconName: 'fas fa-edit',\r\n      menuText: 'Rename column',\r\n      menuEvent: 'renameColumnEvent',\r\n      disabled: false,\r\n    }, {\r\n      faIconName: 'fas fa-plus-square',\r\n      menuText: 'Add column',\r\n      menuEvent: 'addColumnEvent',\r\n      disabled: false,\r\n    },\r\n    {\r\n      faIconName: 'fas fa-trash',\r\n      menuText: 'Remove column',\r\n      menuEvent: 'removeColumnEvent',\r\n      disabled: false\r\n    },];\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  this.getData();\r\n  }\r\n\r\n  private async getData() {\r\n  const products: any = this.httpClient.get(\"https://jsonplaceholder.typicode.com/photos\");\r\n  }\r\n\r\n  // this is how you would change grid properties like headerBgColor, headerColor etc.\r\n  getSpreadTable() {\r\n    console.log(this.gridInstance as SpreadTableComponent);\r\n    this.gridInstance.headerBgColor = '#f5f5f5';\r\n    this.gridInstance.headerColor = '#000';\r\n    this.result = Object.keys(this.gridInstance).join('<br>');\r\n    this.event = 'Grid properties';\r\n  }\r\n\r\n  // this is how you would get selected cells\r\n  getSelectedCells() {\r\n    console.log(this.gridInstance.getSelectedCells());\r\n    this.result = JSON.stringify(this.gridInstance.getSelectedCells(), null, 2);\r\n    this.event = 'Selected Cells';\r\n  }\r\n\r\n  // this is how you would get all the data in the grid\r\n  getGridData() {\r\n    console.log(this.gridInstance.getData());\r\n    this.result = JSON.stringify(this.gridInstance.getData(), null, 2);\r\n    this.event = 'Grid instance';\r\n  }\r\n\r\n  // cell value change event\r\n  onCellValueChange(event: Change[]) {\r\n    console.log('changes:', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Cell value change';\r\n  }\r\n\r\n  // context menu event\r\n  onContextMenuEvent(event: ContextMenuModel) {\r\n    console.log('contextMenuEvent', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Menu event';\r\n  }\r\n\r\n  // column menu event\r\n  async onColumnMenuEvent(event: ContextMenuModel) {\r\n    console.log('contextMenuEvent', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Menu event';\r\n    if (event.menuEvent === 'addColumnEvent') {\r\n      const result = await this.openDialog(\\`Add new column\\`, 'Column name', 'Add', 'Cancel');\r\n\r\n      if (!result) return;\r\n\r\n      // define the new column\r\n      const newColumn = new Column({ name: result, displayName: result, editable: true, resizable: true, minWidth: 200, });\r\n      // add the new column to the columns array\r\n      this.columns.splice(this.columns.indexOf(event.column!) + 1, 0, newColumn);\r\n      this.columns = [...this.columns];\r\n\r\n      // add cells in the data array for the new column\r\n      this.gridInstance.data.forEach((row: Row) => {\r\n        row.cells.splice(this.columns.indexOf(newColumn), 0, new Cell({ columnName: newColumn.name, value: '', originalValue: '', rowIndex: row.rowIndex }));\r\n      });\r\n      this.gridInstance.setColumnsWidth();\r\n    }\r\n\r\n    if (event.menuEvent === 'removeColumnEvent') {\r\n      this.gridInstance.data.forEach((row: Row) => {\r\n        let cells = row.cells.filter((cell: Cell) => cell.columnName !== event.column!.name);\r\n        row.cells = [...cells];\r\n      });\r\n\r\n      this.columns.splice(this.columns.indexOf(event.column!), 1);\r\n      this.columns = [...this.columns];\r\n\r\n      // if there were changes in the undo stack on this column remove them\r\n      this.gridInstance.undoRedoService._changesForUndo.forEach((changes: Change[]) => {\r\n        changes.forEach((change: Change) => {\r\n          if (change.coordinates.columnName === event.column!.name)\r\n            changes.splice(changes.indexOf(change), 1);\r\n        });\r\n      });\r\n\r\n      this.gridInstance.setColumnsWidth();\r\n    }\r\n\r\n    if (event.menuEvent === 'renameColumnEvent') {\r\n      const result = await this.openDialog(\\`Rename - \\${event.column!.displayName}\\`, 'Column name', 'Rename', 'Cancel', event.column!.displayName);\r\n\r\n      if (!result) return;\r\n\r\n      // change cells column name value to the renamed column name\r\n      this.gridInstance.data.forEach((row: Row) => {\r\n        let cell = row.cells.find((cell: Cell) => cell.columnName === event.column!.name);\r\n        cell!.columnName = result;\r\n      });\r\n\r\n      // if there were changes in the undo stack on this column set them to the new column name\r\n      this.gridInstance.undoRedoService._changesForUndo.forEach((changes: Change[]) => {\r\n        changes.forEach((change: Change) => {\r\n          if (change.coordinates.columnName === event.column!.name)\r\n            change.coordinates.columnName = result;\r\n        });\r\n      });\r\n\r\n      // rename column in the columns array\r\n      const columnIndex = this.columns.indexOf(event.column!);\r\n      this.columns[columnIndex].displayName = result;\r\n      this.columns[columnIndex].name = result;\r\n      this.columns = [...this.columns];\r\n\r\n      this.gridInstance.setColumnsWidth();\r\n    }\r\n  }\r\n\r\n  async openDialog(headerText: string, bodyText: string, okButtonText: string, cancelButtonText: string, value: string = '') {\r\n    const dialogRef = this.dialog.open(CustomModalComponent);\r\n\r\n    dialogRef.componentInstance.headerText = headerText;\r\n    dialogRef.componentInstance.bodyText = bodyText;\r\n    dialogRef.componentInstance.okButtonText = okButtonText;\r\n    dialogRef.componentInstance.cancelButtonText = cancelButtonText;\r\n    dialogRef.componentInstance.value = value;\r\n\r\n    const result = await firstValueFrom(dialogRef.afterClosed());\r\n\r\n    return result;\r\n  }\r\n}`;\r\n\r\n  appComponentHtmlSetup =\r\n    `<spread-table *ngIf=\"data\"\r\n                #spreadTable\r\n                [columns]=\"columns\"\r\n                [minColumnWidth]=\"100\"\r\n                [rowHeight]=\"36\"\r\n                [indexWidth]=\"60\"\r\n                [rawData]=\"data\"\r\n                [undoRedoStackSize]=\"20\"\r\n                [extraContextMenuItems]=\"extraContextMenuItems\"\r\n                [extraColumnMenuItems]=\"extraColumnMenuItems\"\r\n                (cellValueChange)=\"onCellValueChange($event)\"\r\n                (contextMenuEvent)=\"onContextMenuEvent($event)\"\r\n                (columnMenuEvent)=\"onColumnMenuEvent($event)\">\r\n  </spread-table>`;\r\n\r\n  customRendererTs =\r\n    `import { Component } from '@angular/core';\r\nimport { IRendererComponent, IRendererParams } from 'test-packages/spread-table/lib/models/renderer.models';\r\n\r\n@Component({\r\n  selector: 'app-st-custom-renderer',\r\n  templateUrl: './st-custom-renderer.component.html',\r\n  styleUrls: ['./st-custom-renderer.component.css']\r\n})\r\nexport class StCustomRendererComponent implements IRendererComponent {\r\n  params: IRendererParams | undefined;\r\n\r\n  text: string = '';\r\n  constructor() { }\r\n  stInit(params: IRendererParams) {\r\n    this.params = params;\r\n    this.text = params.value.split('/').pop();\r\n  }\r\n}\r\n`;\r\n\r\n  customRendererHtml =\r\n    `<div style=\"white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\">\r\n  <img [src]=\"params?.value\"\r\n       height=\"26px\"\r\n       width=\"26px\"\r\n       alt=\"placeholder\"\r\n       style=\"margin-right:5px\">\r\n  <span style=\"vertical-align: top\">{{text}}</span>\r\n</div>\r\n`;\r\n\r\n  customEditorTs =\r\n    `import { Component, EventEmitter } from '@angular/core';\r\nimport { IEditorComponent, IEditorParams } from 'test-packages/spread-table/lib/models/editor.models';\r\n\r\n@Component({\r\n  selector: 'app-st-dropdown-editor',\r\n  templateUrl: './st-dropdown-editor.component.html',\r\n  styleUrls: ['./st-dropdown-editor.component.scss']\r\n})\r\nexport class StDropdownEditorComponent implements IEditorComponent {\r\n  setValue: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  params: IEditorParams | undefined;\r\n\r\n  stInit(params: IEditorParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  select(item: any) {\r\n    this.setValue.emit(+item.target.value);\r\n  }\r\n}\r\n`;\r\n\r\n  customEditorHtml =\r\n    `<select style=\"width: 100%;height:100%;\"\r\n        autofocus\r\n        [formControl]=\"params?.input\"\r\n        (change)=\"select($event)\"\r\n        class=\"form-control\">\r\n  <option [style.background]=\"item == params?.input.value ? '#dbf2ff' : ''\"\r\n          *ngFor=\"let item of params?.column?.editorParams?.items\"\r\n          [value]=\"item\">{{item}}</option>\r\n</select>\r\n`;\r\n\r\n  addCustomRendererAndEditor =\r\n    `frameworkComponents = {\r\n    dropdownEditor: StDropdownEditorComponent,\r\n    customRenderer: StCustomRendererComponent\r\n  };\r\n\r\n  columns: Column[] = [\r\n    new Column({ displayName: 'Id', name: 'id', editable: false, resizable: false }),\r\n    new Column({ displayName: 'Album Id', name: 'albumId', editorComponent: this.frameworkComponents.dropdownEditor, editorParams: { items: [1, 2, 3, 4] } }),\r\n    new Column({ displayName: 'Title', name: 'title', minWidth: 400, validators: [RequiredValidator.required(), RequiredValidator.requiredString()] }),\r\n    new Column({ displayName: 'Url', name: 'url', minWidth: 300, rendererComponent: this.frameworkComponents.customRenderer }),\r\n    new Column({ displayName: 'Thumbnail Url', name: 'thumbnailUrl', minWidth: 300, rendererComponent: this.frameworkComponents.customRenderer })];\r\n    `;\r\n}\r\n","<div>This is <b>Spread Table</b>, a customizable Angular table that tends to look and feel like a basic spreadsheet.\r\n</div>\r\n\r\n<h1>Table of contents</h1>\r\n<ul class=\"table-of-contents\">\r\n  <li><a href=\"#features\">Features</a></li>\r\n  <li><a href=\"#instalation\">Installation</a></li>\r\n  <li><a href=\"#setup\">Setup</a></li>\r\n  <li><a href=\"#customRenderer\">Custom Renderer</a></li>\r\n  <li><a href=\"#customEditor\">Custom Editor</a></li>\r\n</ul>\r\n\r\n<h1 id=\"features\">Features</h1>\r\n<ul>\r\n  <li>✅ virtual scroll for displaying big data super fast</li>\r\n  <li>✅ copy/paste/cut functionality with keyboard shortcuts</li>\r\n  <li>✅ copy/paste/cut in bulk</li>\r\n  <li>✅ copy/paste/cut from and into excel</li>\r\n  <li>✅ custom validators support</li>\r\n  <li>✅ custom renderer and editor</li>\r\n  <li>✅ disabled columns</li>\r\n  <li>✅ undo/redo on single or batch changes</li>\r\n  <li>✅ resizable columns</li>\r\n  <li>✅ extensible column/context menus with events</li>\r\n</ul>\r\n\r\n<h1 id=\"instalation\">Installation</h1>\r\n\r\n<div>npm</div>\r\n\r\n<code>\r\n<pre class=\"code\">npm i spread-table</pre>\r\n</code>\r\n\r\n<div>or yarn</div>\r\n\r\n<code>\r\n<pre class=\"code\">yarn add spread-table</pre>\r\n</code>\r\n\r\n<h1 id=\"setup\">Setup</h1>\r\n<h3>Module Setup (app.module.ts)</h3>\r\n<pre class=\"code\"><code [highlight]=\"appModuleSetup\"></code></pre>\r\n\r\n<h3> Usage (app.component.ts) </h3>\r\n<pre class=\"code\"><code [highlight]=\"appComponentTsSetup\"></code></pre>\r\n\r\n<h3> Usage (app.component.html) </h3>\r\n<pre class=\"code\"><code [highlight]=\"appComponentHtmlSetup\"></code></pre>\r\n\r\n<h1 id=\"customRenderer\">Custom Renderer</h1>\r\n<h3>st-custom-renderer.component.ts</h3>\r\n<pre class=\"code\"><code [highlight]=\"customRendererTs\"></code></pre>\r\n\r\n<h3>st-custom-renderer.component.html</h3>\r\n<pre class=\"code\"><code [highlight]=\"customRendererHtml\"></code></pre>\r\n\r\n<h1 id=\"customEditor\">Custom Editor</h1>\r\n<h3>st-dropdown-editor.component.ts</h3>\r\n<pre class=\"code\"><code [highlight]=\"customRendererTs\"></code></pre>\r\n\r\n<h3>st-dropdown-editor.component.html</h3>\r\n<pre class=\"code\"><code [highlight]=\"customRendererHtml\"></code></pre>\r\n\r\n<h3>This is how you add the custom renderers and editors to columns</h3>\r\n<h3>app.component.ts</h3>\r\n<pre class=\"code\"><code [highlight]=\"addCustomRendererAndEditor\"></code></pre>\r\n\r\n<a style=\"width: 124px;\r\n    height: 32px;\r\n    background: url(https://raw.githubusercontent.com/neb1neuron/ng-spread-table/master/buy-me-a-beer.svg);\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    display: inline-block;\"\r\n   href=\"https://www.paypal.com/paypalme/CFeder/5\"\r\n   class=\"btn\"></a>\r\n\r\n<br>\r\n<br>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-custom-modal',\r\n  templateUrl: './custom-modal.component.html',\r\n  styleUrls: ['./custom-modal.component.scss']\r\n})\r\nexport class CustomModalComponent implements OnInit {\r\n\r\n  @Input() headerText = \"\";\r\n  @Input() bodyText = \"\";\r\n  @Input() okButtonText = \"\";\r\n  @Input() cancelButtonText = \"\";\r\n  @Input() value = \"\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.input.setValue(this.value);\r\n  }\r\n\r\n  input = new FormControl(this.value, [Validators.required]);\r\n\r\n  getValue() {\r\n    return this.input.value;\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{headerText}}</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\"\r\n                    appearance=\"fill\">\r\n      <mat-label>{{bodyText}}</mat-label>\r\n      <input type=\"text\"\r\n             autocomplete=\"off\"\r\n             matInput\r\n             [formControl]=\"input\">\r\n      <mat-error *ngIf=\"input.hasError('required')\">\r\n        Required\r\n      </mat-error>\r\n    </mat-form-field>\r\n  </form>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button\r\n          mat-dialog-close>{{cancelButtonText}}</button>\r\n  <button mat-button\r\n          [mat-dialog-close]=\"getValue()\"\r\n          [disabled]=\"input.invalid\"\r\n          cdkFocusInitial>{{okButtonText}}</button>\r\n</mat-dialog-actions>\r\n","import { AbstractControl, Validators } from \"@angular/forms\";\r\n\r\nexport class RequiredValidator extends Validators {\r\n  public static required() {\r\n    return (control: AbstractControl): { [key: string]: any } | null =>\r\n      control.value ? null : { required: 'This field is required' };\r\n  }\r\n\r\n  public static requiredString() {\r\n    return (control: AbstractControl): { [key: string]: any } | null =>\r\n      control.value ? null : { requiredString: 'This field must be a string' };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { IRendererComponent, IRendererParams } from 'test-packages/spread-table/lib/models/renderer.models';\r\n\r\n@Component({\r\n  selector: 'app-st-custom-renderer',\r\n  templateUrl: './st-custom-renderer.component.html',\r\n  styleUrls: ['./st-custom-renderer.component.css']\r\n})\r\nexport class StCustomRendererComponent implements IRendererComponent {\r\n  params: IRendererParams | undefined;\r\n\r\n  text: string = '';\r\n  constructor() { }\r\n  stInit(params: IRendererParams) {\r\n    this.params = params;\r\n    this.text = params.value.split('/').pop();\r\n  }\r\n}\r\n","<div style=\"white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\">\r\n  <img [src]=\"params?.value\"\r\n       height=\"26px\"\r\n       width=\"26px\"\r\n       alt=\"placeholder\"\r\n       style=\"margin-right:5px\">\r\n  <span style=\"vertical-align: top\">{{text}}</span>\r\n</div>\r\n","import { Component, EventEmitter } from '@angular/core';\r\nimport { IEditorComponent, IEditorParams } from 'test-packages/spread-table/lib/models/editor.models';\r\n\r\n@Component({\r\n  selector: 'app-st-dropdown-editor',\r\n  templateUrl: './st-dropdown-editor.component.html',\r\n  styleUrls: ['./st-dropdown-editor.component.scss']\r\n})\r\nexport class StDropdownEditorComponent implements IEditorComponent {\r\n  setValue: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  params: IEditorParams | undefined;\r\n\r\n  stInit(params: IEditorParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  select(item: any) {\r\n    this.setValue.emit(+item.target.value);\r\n  }\r\n}\r\n","<select style=\"width: 100%;height:100%;\"\r\n        autofocus\r\n        [formControl]=\"params?.input\"\r\n        (change)=\"select($event)\"\r\n        class=\"form-control\">\r\n  <option [style.background]=\"item == params?.input.value ? '#dbf2ff' : ''\"\r\n          *ngFor=\"let item of params?.column?.editorParams?.items\"\r\n          [value]=\"item\">{{item}}</option>\r\n</select>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}