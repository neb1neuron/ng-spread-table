{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/custom-validators/required-validator.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport { Column, Change, ContextMenuModel, SpreadTable, ISpreadTable } from 'spread-table';\r\nimport { RequiredValidator } from './custom-validators/required-validator';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  columns: Column[] = [\r\n    new Column({ displayName: 'Id', name: 'id', editable: false, resizable: false }),\r\n    new Column({ displayName: 'Album Id', name: 'albumId' }),\r\n    new Column({ displayName: 'Title', name: 'title', minWidth: 400, validators: [RequiredValidator.required(), RequiredValidator.requiredString()] }),\r\n    new Column({ displayName: 'Url', name: 'url', minWidth: 300 }),\r\n    new Column({ displayName: 'Thumbnail Url', name: 'thumbnailUrl', minWidth: 300 })];\r\n\r\n  data: any;\r\n  event!: string;\r\n  result: any;\r\n\r\n  gridInstance: ISpreadTable = new SpreadTable();\r\n\r\n  @ViewChild('spreadTable') set grid(gridInstance: SpreadTable) {\r\n    this.gridInstance = gridInstance;\r\n  }\r\n\r\n  extraContextMenuItems: ContextMenuModel[] =\r\n    [{\r\n      menuText: 'separator'\r\n    }, {\r\n      faIconName: 'fas fa-american-sign-language-interpreting',\r\n      menuText: 'Test 1',\r\n      menuEvent: 'test1Event',\r\n      disabled: false,\r\n    },\r\n    {\r\n      faIconName: 'fas fa-archway',\r\n      menuText: 'Test 2',\r\n      menuEvent: 'test2Event',\r\n      disabled: true\r\n    },];\r\n\r\n  extraColumnMenuItems: ContextMenuModel[] =\r\n    [{\r\n      menuText: 'separator'\r\n    }, {\r\n      faIconName: 'fas fa-american-sign-language-interpreting',\r\n      menuText: 'Column Test 1',\r\n      menuEvent: 'columnTest1Event',\r\n      disabled: false,\r\n    },\r\n    {\r\n      faIconName: 'fas fa-archway',\r\n      menuText: 'Column Test 2',\r\n      menuEvent: 'columnTest2Event',\r\n      disabled: true\r\n    },];\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.getData();\r\n  }\r\n\r\n  private async getData() {\r\n    // const products: any = await lastValueFrom(this.httpClient.get('../assets/data.json'));\r\n    const products: any = await lastValueFrom(this.httpClient.get('https://jsonplaceholder.typicode.com/photos'));\r\n\r\n    this.data = products;\r\n  }\r\n\r\n  // addColumn() {\r\n  //   this.gridInstance.columns.push(new Column({ displayName: 'New Column', name: 'aaa', minWidth: 150 }));\r\n  // }\r\n\r\n  getSpreadTable() {\r\n    console.log(this.gridInstance as ISpreadTable);\r\n    this.gridInstance.headerBgColor = this.randomColor().backgroundColor;\r\n    this.gridInstance.headerColor = this.randomColor().color;\r\n    this.result = Object.keys(this.gridInstance).join('<br>');\r\n    this.event = 'Grid properties';\r\n  }\r\n\r\n  getSelectedCells() {\r\n    console.log(this.gridInstance.getSelectedCells());\r\n    this.result = JSON.stringify(this.gridInstance.getSelectedCells(), null, 2);\r\n    this.event = 'Selected Cells';\r\n  }\r\n\r\n  getGridData() {\r\n    console.log(this.gridInstance.getData());\r\n    this.result = JSON.stringify(this.gridInstance.getData(), null, 2);\r\n    this.event = 'Grid instance';\r\n  }\r\n\r\n  onCellValueChange(event: Change[]) {\r\n    console.log('changes:', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Cell value change';\r\n  }\r\n\r\n  onContextMenuEvent(event: ContextMenuModel) {\r\n    console.log('contextMenuEvent', event);\r\n    this.result = JSON.stringify(event, null, 2);\r\n    this.event = 'Menu event';\r\n  }\r\n\r\n  private randomColor = () => {\r\n    let color = Math.floor(Math.random() * 16777215).toString(16);\r\n\r\n    /* sometimes the returned value does not have\r\n     * the 6 digits needed, so we do it again until\r\n     * it does\r\n     */\r\n\r\n    while (color.length < 6) {\r\n      color = Math.floor(Math.random() * 16777215).toString(16);\r\n    }\r\n\r\n    let red = parseInt(color.substring(0, 2), 16);\r\n    let green = parseInt(color.substring(2, 4), 16);\r\n    let blue = parseInt(color.substring(4, 6), 16);\r\n    let brightness = red * 0.299 + green * 0.587 + blue * 0.114;\r\n\r\n    /* if (red*0.299 + green*0.587 + blue*0.114) > 180\r\n     * use #000000 else use #ffffff\r\n     */\r\n\r\n    if (brightness > 180) {\r\n      return {\r\n        backgroundColor: '#' + color,\r\n        color: '#000000',\r\n      };\r\n    } else\r\n      return {\r\n        backgroundColor: '#' + color,\r\n        color: '#ffffff',\r\n      };\r\n  };\r\n}\r\n\r\n","Spread table\r\n\r\n<button (click)=\"getSpreadTable()\">Get spread table</button>\r\n<!-- <button (click)=\"addColumn()\">Add Column</button> -->\r\n<button (click)=\"getSelectedCells()\">Selected Cells</button>\r\n<button (click)=\"getGridData()\">Get Data</button>\r\n<a style=\"padding-right: 82px;\r\n    padding-bottom: 20px;\r\n    background: url(https://raw.githubusercontent.com/neb1neuron/ng-spread-table/master/buy-me-a-beer.svg);\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    display: inline-block;\"\r\n   href=\"https://www.paypal.com/paypalme/CFeder/5\"></a>\r\n<div class=\"p-3 w-100\"\r\n     style=\"height: 700px;\">\r\n  <spread-table #spreadTable\r\n                [columns]=\"columns\"\r\n                [minColumnWidth]=\"100\"\r\n                [rowHeight]=\"36\"\r\n                [indexWidth]=\"60\"\r\n                [rawData]=\"data\"\r\n                [extraContextMenuItems]=\"extraContextMenuItems\"\r\n                [extraColumnMenuItems]=\"extraColumnMenuItems\"\r\n                (cellValueChange)=\"onCellValueChange($event)\"\r\n                (contextMenuEvent)=\"onContextMenuEvent($event)\"\r\n                (columnMenuEvent)=\"onContextMenuEvent($event)\">\r\n\r\n  </spread-table>\r\n</div>\r\n<h3 class=\"result\"\r\n    [innerHtml]=\"event\"></h3>\r\n<pre class=\"result\"\r\n     [innerHtml]=\"result\"></pre>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { SpreadTableModule } from 'spread-table';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    SpreadTableModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AbstractControl, Validators } from \"@angular/forms\";\r\n\r\nexport class RequiredValidator extends Validators {\r\n  public static required() {\r\n    return (control: AbstractControl): { [key: string]: any } | null =>\r\n      control.value ? null : { required: 'This field is required' };\r\n  }\r\n\r\n  public static requiredString() {\r\n    return (control: AbstractControl): { [key: string]: any } | null =>\r\n      control.value ? null : { requiredString: 'This field must be a string' };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}